name: CI

on: [push, pull_request]

jobs:
  build:
    name: Generate build and check code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.1.0
      - name: Install NPM dependencies
        run: pnpm i --frozen-lockfile --ignore-scripts
      - name: Code Style Check
        run: pnpm run format:check
      - name: Build
        run: pnpm run build
      - uses: actions/upload-artifact@v3
        with:
          name: group-github-activity-readme # name：上传的artifact的名称，下载的时候需要使用。
          path: |
            .
            !.git
            !./node_modules
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"
  loadEnv:
    runs-on: ubuntu-latest
    outputs:
      users: ${{ steps.getUsers.outputs }}
      repos: ${{ steps.getRepos.outputs }}
    steps:
      - id: getUsers
        run: echo ./config.json | grep -o '"users":"[^"]*' | grep -o '[^"]*$' >> "$GITHUB_OUTPUT"
      - id: getRepos
        run: echo ./config.json | grep -o '"repos":"[^"]*' | grep -o '[^"]*$' >> "$GITHUB_OUTPUT"
  test:
    needs: [build, loadEnv]
    name: test dist/index.js
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: group-github-activity-readme # name：需要下载的 artifact 的名称
      - name: Display structure of downloaded files
        run: ls -R
      - env:
          users: ${{needs.loadEnv.outputs.users}}
          repos: ${{needs.loadEnv.outputs.repos}}
        run: echo "$users $repos"
      - uses: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          GH_USERNAMES: "yiliang114"
          GH_REPOS: "microsoft/vscode"
